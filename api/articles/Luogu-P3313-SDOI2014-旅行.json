{"title":"Luogu P3313 [SDOI2014]旅行","slug":"Luogu-P3313-SDOI2014-旅行","date":"2018-10-08T01:53:35.000Z","updated":"2018-10-08T07:51:28.578Z","comments":true,"excerpt":"","content":"<p>听说这题是动态开点线段树模板题？<br>观察一下题面，显然先上一发树剖，好像是对每一种宗教开一颗线段树，然后维护区间和和区间最大值。。。<br>虽然我是来练动态开点线段树板子的，考虑到fhq Treap极为好写，我还是<del>不要脸的</del>使用了fhq Treap来维护<br>我们可以对每一个宗教开一颗fhq Treap:</p>\n<ul>\n<li>第一个操作就是将节点换一棵树，那一个erase加一个insert就行了</li>\n<li>第二个操作是改变一个点的点权，我是采取erase出来之后直接修改value，pushup之后再insert回去的方法<del>这样好写</del></li>\n<li>第三个操作我们在链上向上跳的时候询问一下这段区间内的权值和即可</li>\n<li>第四个操作同操作三，询问区间最大值更新<br>总的来说其实不难想，就是把两个数据结构写写好套一套就行了<del>注意细节</del></li>\n</ul>\n<p><del>说好来练动态开点线段树的呢？</del></p>\n<p>附上我丑陋的代码？<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt; </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> IO&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> c = getchar(); <span class=\"keyword\">int</span> x = <span class=\"number\">0</span>; <span class=\"keyword\">bool</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (c &lt; <span class=\"string\">'0'</span> || c &gt; <span class=\"string\">'9'</span>) (c == <span class=\"string\">'-'</span>) &amp;&amp; (flag = <span class=\"number\">1</span>), c = getchar();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (c &gt;= <span class=\"string\">'0'</span> &amp;&amp; c &lt;= <span class=\"string\">'9'</span>) x = x * <span class=\"number\">10</span> + c - <span class=\"string\">'0'</span>, c = getchar();</span><br><span class=\"line\">        (flag) &amp;&amp; (x = -x);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span>) <span class=\"built_in\">putchar</span>(<span class=\"string\">'-'</span>), x = -x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &gt; <span class=\"number\">9</span>) write(x / <span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"built_in\">putchar</span>(x % <span class=\"number\">10</span> + <span class=\"string\">'0'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">file</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> ONLINE_JUDGE</span></span><br><span class=\"line\">        freopen(<span class=\"string\">\"2.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">        freopen(<span class=\"string\">\"testdata1.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">        <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> IO;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100009</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n, q, cnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> head[N], nxt[N &lt;&lt; <span class=\"number\">1</span>], to[N &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> w[N], c[N], dep[N], fa[N], son[N], id[N], top[N], siz[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> rt[N], val[N], max[N], ch[N][<span class=\"number\">2</span>], key[N], sum[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> Treap &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">pushup</span><span class=\"params\">(<span class=\"keyword\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">        max[u] = <span class=\"built_in\">std</span>::max(<span class=\"built_in\">std</span>::max(max[ch[u][<span class=\"number\">0</span>]], max[ch[u][<span class=\"number\">1</span>]]), val[u]);</span><br><span class=\"line\">        sum[u] = sum[ch[u][<span class=\"number\">0</span>]] + sum[ch[u][<span class=\"number\">1</span>]] + val[u];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">desNode</span><span class=\"params\">(<span class=\"keyword\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">        ch[u][<span class=\"number\">0</span>] = ch[u][<span class=\"number\">1</span>] = <span class=\"number\">0</span>, siz[u] = <span class=\"number\">1</span>, max[u] = sum[u] = val[u];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!l || !r) <span class=\"keyword\">return</span> l ^ r;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key[l] &lt; key[r]) &#123;</span><br><span class=\"line\">            ch[l][<span class=\"number\">1</span>] = merge(ch[l][<span class=\"number\">1</span>], r);</span><br><span class=\"line\">            pushup(l);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> l;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ch[r][<span class=\"number\">0</span>] = merge(l, ch[r][<span class=\"number\">0</span>]);</span><br><span class=\"line\">            pushup(r);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> &amp;l, <span class=\"keyword\">int</span> &amp;r)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!u) l = r = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (u &lt;= x) l = u, split(ch[l][<span class=\"number\">1</span>], x, ch[l][<span class=\"number\">1</span>], r);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> r = u, split(ch[r][<span class=\"number\">0</span>], x, l, ch[r][<span class=\"number\">0</span>]);</span><br><span class=\"line\">            pushup(u);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t1, t2;</span><br><span class=\"line\">        split(rt[x], u, t1, t2);</span><br><span class=\"line\">        rt[x] = merge(merge(t1, u), t2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">erase</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t1, t2, t3;</span><br><span class=\"line\">        split(rt[x], u, t1, t2);</span><br><span class=\"line\">        split(t1, u - <span class=\"number\">1</span>, t1, t3);</span><br><span class=\"line\">        rt[x] = merge(merge(t1, merge(ch[t3][<span class=\"number\">0</span>], ch[t3][<span class=\"number\">1</span>])), t2);</span><br><span class=\"line\">        desNode(t3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> Treap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ch[u][<span class=\"number\">0</span>]) print(ch[u][<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d : %d %d %d %d %d\\n\"</span>, u, val[u], sum[u], ch[u][<span class=\"number\">0</span>], ch[u][<span class=\"number\">1</span>], key[u]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ch[u][<span class=\"number\">1</span>]) print(ch[u][<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">getopt</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (c != <span class=\"string\">'C'</span> &amp;&amp; c != <span class=\"string\">'W'</span> &amp;&amp; c != <span class=\"string\">'S'</span> &amp;&amp; c != <span class=\"string\">'Q'</span> &amp;&amp; c != <span class=\"string\">'M'</span>) c = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> u = head[a], v = ++cnt;</span><br><span class=\"line\">    nxt[v] = u, to[v] = b;</span><br><span class=\"line\">    head[a] = v;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs1</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> pre, <span class=\"keyword\">int</span> depth)</span> </span>&#123;</span><br><span class=\"line\">    fa[u] = pre, dep[u] = depth, siz[u] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = head[u]; i; i = nxt[i]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to[i] == pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        dfs1(to[i], u, depth + <span class=\"number\">1</span>);</span><br><span class=\"line\">        siz[u] += siz[to[i]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (siz[to[i]] &gt; siz[son[u]]) son[u] = to[i]; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs2</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> t)</span> </span>&#123;</span><br><span class=\"line\">    top[u] = t, id[u] = ++cnt;</span><br><span class=\"line\">    max[id[u]] = sum[id[u]] = val[id[u]] = w[u], key[id[u]] = rand() % <span class=\"number\">19260817</span>, rt[c[u]] = merge(rt[c[u]], id[u]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!son[u]) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    dfs2(son[u], t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = head[u]; i; i = nxt[i]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to[i] == fa[u] || to[i] == son[u]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        dfs2(to[i], to[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get_sum</span><span class=\"params\">(<span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t1, t2, t3, ans;</span><br><span class=\"line\">    split(rt[x], l - <span class=\"number\">1</span>, t1, t2);</span><br><span class=\"line\">    split(t2, r, t2, t3);</span><br><span class=\"line\">    ans = sum[t2];</span><br><span class=\"line\">    rt[x] = merge(merge(t1,t2), t3);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get_max</span><span class=\"params\">(<span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t1, t2, t3, ans;</span><br><span class=\"line\">    split(rt[x], l - <span class=\"number\">1</span>, t1, t2);</span><br><span class=\"line\">    split(t2, r, t2, t3);</span><br><span class=\"line\">    ans = max[t2];</span><br><span class=\"line\">    rt[x] = merge(merge(t1, t2), t3);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    file();</span><br><span class=\"line\">    n = read(), q = read();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) w[i] = read(), c[i] = read();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> u = read(), v = read();</span><br><span class=\"line\">        add(u, v);</span><br><span class=\"line\">        add(v, u);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dfs1(<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), cnt = <span class=\"number\">0</span>, dfs2(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> opt1 = getopt(), opt2 = getopt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (opt1 == <span class=\"string\">'C'</span> &amp;&amp; opt2 == <span class=\"string\">'C'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = read(), y = read();</span><br><span class=\"line\">            erase(id[x], c[x]);</span><br><span class=\"line\">            insert(id[x], c[x] = y);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt1 == <span class=\"string\">'C'</span> &amp;&amp; opt2 == <span class=\"string\">'W'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t1, t2, t3, x = read(), y = read();</span><br><span class=\"line\">            erase(id[x], c[x]);</span><br><span class=\"line\">            val[id[x]] = y, pushup(id[x]);</span><br><span class=\"line\">            insert(id[x], c[x]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt1 == <span class=\"string\">'Q'</span> &amp;&amp; opt2 == <span class=\"string\">'S'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> u = read(), v = read(), x = c[u], ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (top[u] != top[v]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (dep[top[u]] &lt; dep[top[v]]) <span class=\"built_in\">std</span>::swap(u, v);</span><br><span class=\"line\">                ans += get_sum(id[top[u]], id[u], x);   </span><br><span class=\"line\">                u = fa[top[u]];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dep[u] &lt; dep[v]) <span class=\"built_in\">std</span>::swap(u, v);</span><br><span class=\"line\">            ans += get_sum(id[v], id[u], x);</span><br><span class=\"line\">            write(ans), <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> u = read(), v = read(), x = c[u], ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (top[u] != top[v]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (dep[top[u]] &lt; dep[top[v]]) <span class=\"built_in\">std</span>::swap(u, v);</span><br><span class=\"line\">                ans = <span class=\"built_in\">std</span>::max(ans, get_max(id[top[u]], id[u], x));</span><br><span class=\"line\">                u = fa[top[u]]; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dep[u] &lt; dep[v]) <span class=\"built_in\">std</span>::swap(u, v);</span><br><span class=\"line\">            ans = <span class=\"built_in\">std</span>::max(ans, get_max(id[v], id[u], x));</span><br><span class=\"line\">            write(ans), <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","thumbnail":"https://s1.ax1x.com/2018/10/08/iJiWa4.jpg","categories":[{"name":"题解","path":"api/categories/题解.json"}],"tags":[{"name":"树链剖分","path":"api/tags/树链剖分.json"},{"name":"fhq Treap","path":"api/tags/fhq Treap.json"}]}